There are 2 types of exceptions as 

	1) Checked Exceptions : These are the exceptions that which occurs at compile time, during compilation jvm feels some erroneous code is there and stops the execution at compile time, and can be handled at method level by using throws keyword. 

	2) Unchecked Exceptions : These are the exceptions that which occurs at runtime, and can be handled by using try...catch block. 


throw keyword : 

If you want to throw any exception based on condition, then we need the help of throw keyword. We can throw CustomExceptions and System Exceptions as well. 

Write a Program as accept a number, if no < 0 then throw NumberFormatException, if no = 0 then throw ArithmeticException 

CustomException : 

You can create customexception by using Exception class. Any class that which is derived from exception can be treated as custom exception. 

class CustomException extends Exception {

     CustomException(String error) {
          super(error);
     }
}

Write a program to check the given email is valid email or not, 

ex: if '@' not found throw InvalidEmailException 
    if username > 12 chars then throw InvalidUserNameException

*** Create 2 custom exception classes ***

https://checkstyle.org/eclipse-cs/update

Files : A files is a collection of data which used to store the output permanently. To deal with files, we need the help of java.io package. 

To access the file, we need File class. 

File obj=new File("filename");

FileReader : Allows you to read the data from the file. 

FileReader fr=new FileReader(filename);

read() : used to read data char/char and returns the ascii value, it returns -1 once it reaches the end of file. 


FileWriter : Allows you to write data into the file. 

FileWriter fw=new FileWriter(filename);

write() : used to write data char/char 

FileInputStream : Used to read data w.r.t. Stream of bytes. 


FileInputStream fin=new FileInputStream(filename);

read() : used to read data char/char and returns the ascii value. 

FileInputStream : used to write data w.r.t Stream of bytes. 

write() :used to write data char/char 


















































